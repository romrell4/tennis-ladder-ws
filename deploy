#!/bin/bash

# Ensure there are no changes to be pushed
if [[ `git status --porcelain` ]]; then
	read -n 1 -p "There are uncommited changes. Are you sure you'd like to continue? " yn
	if [[ "$yn" != "y" ]]; then
		exit 1;
	fi
fi

# Run the test suite
cd test
../venv/bin/python test_runner.py
RESULT=$?
cd ..
if [ $RESULT -ne 0 ]; then
	echo ""
	echo "Failed tests. Code will not be deployed until all tests are resolved"
	exit $RESULT
fi

# Update the API Gateway
aws apigateway put-rest-api --rest-api-id lxlwvoenil --mode overwrite --fail-on-warnings --body file://res/api.json
aws apigateway create-deployment --rest-api-id lxlwvoenil --stage-name prod

# Zip and update the code for the Lambda
cd src
../venv/bin/pip install -r ../requirements.txt -t .
rm lambda.zip
zip -r lambda.zip *
aws lambda update-function-code --function-name TennisLadder --zip-file fileb://lambda.zip
# Remove all the inline-installed dependencies
git status | grep '\t' | xargs -I {} rm -r {}
cd ..
